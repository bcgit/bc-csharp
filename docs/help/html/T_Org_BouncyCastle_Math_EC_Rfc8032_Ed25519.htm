<!DOCTYPE html ><html lang="en-US"><head><meta charset="utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" href="../css/bulma.css" /><link rel="stylesheet" href="../css/font-awesome.min.css" /><link rel="stylesheet" href="../css/presentationStyle.css" /><link rel="stylesheet" href="../css/vs.min.css" /><script src="../scripts/jquery-3.5.1.min.js"></script><script src="../scripts/clipboard.min.js"></script><script src="../scripts/highlight.min.js"></script><script src="../scripts/presentationStyle.js"></script><title>Ed25519 Class</title><meta name="Title" content="Ed25519" /><meta name="Help.Id" content="T:Org.BouncyCastle.Math.EC.Rfc8032.Ed25519" /><meta name="Help.ContentType" content="Reference" /><meta name="container" content="Org.BouncyCastle.Math.EC.Rfc8032" /><meta name="guid" content="T_Org_BouncyCastle_Math_EC_Rfc8032_Ed25519" /><meta name="Description" content="A low-level implementation of the Ed25519, Ed25519ctx, and Ed25519ph instantiations of the Edwards-Curve Digital Signature Algorithm specified in RFC 8032." /><meta name="tocFile" content="../toc/ID0PC0.xml" /></head><body><div class="fixedLayout"><div id="Header" class="fixedHeader"><div class="pageHeader level mb-0 py-2 px-4"><div id="TitleContainer" class="level-left"><div class="level-item"><a target="_blank" rel="noopener noreferrer" href="https://www.bouncycastle.org/csharp/"><img alt="Bouncy Castle Cryptography Library for .NET" src="../icons/bc-square-48.png" /></a></div><div id="DocumentationTitle" class="level-item">Bouncy Castle Library</div></div><div id="LangFilterSearchContainer" class="level-right"><div class="level-item"><div class="dropdown is-hoverable"><div class="dropdown-trigger"><button class="button" aria-haspopup="true" aria-controls="dropdown-menu"><span id="CurrentLanguage"></span><span class="icon is-small"><i class="fa fa-angle-down" aria-hidden="true"></i></span></button></div><div class="dropdown-menu" role="menu"><div id="LanguageSelections" class="dropdown-content"><a class="dropdown-item languageFilterItem" data-languageId="cs">C#</a><a class="dropdown-item languageFilterItem" data-languageId="vb">VB</a><a class="dropdown-item languageFilterItem" data-languageId="cpp">C++</a><a class="dropdown-item languageFilterItem" data-languageId="js">JavaScript</a></div></div></div></div><div class="level-item"><form id="SearchForm" action="#" onsubmit="TransferToSearchPage(); return false;"><div class="field"><div class="control has-icons-left"><input id="SearchTerms" class="input" type="text" maxlength="200" placeholder="Search" /><span class="icon is-small is-left"><i class="fa fa-search"></i></span><button id="SearchButton" type="submit" class="is-hidden"></button></div></div></form></div></div></div></div><div class="fixedContent"><nav class="breadcrumb my-1 px-2 border-bottom" role="navigation"><ul id="TopicBreadcrumbs" /></nav><div id="ContentContainer" class="columns pl-5 pr-5 fixedContent"><div id="ShowHideTOCColumn" class="column is-hidden-tablet"><a id="ShowHideTOC">Show/Hide TOC</a></div><div id="TOCColumn" class="column is-hidden-mobile"><nav class="toc"><ul id="TableOfContents" class="toc-menu" /></nav></div><div id="Resizer" class="is-hidden"></div><div id="TopicContent" class="column content is-7"><h1>Ed<wbr />25519 Class</h1><div class="summary">
            A low-level implementation of the Ed25519, Ed25519ctx, and Ed25519ph instantiations of the Edwards-Curve Digital
            Signature Algorithm specified in <a href="https://www.rfc-editor.org/rfc/rfc8032">RFC 8032</a>.
            </div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Definition</h2><div id="IDBSection"><strong>Namespace:</strong> <a href="N_Org_BouncyCastle_Math_EC_Rfc8032.htm">Org.BouncyCastle.Math.EC.Rfc8032</a><br /><strong>Assembly:</strong> BouncyCastle.Cryptography (in BouncyCastle.Cryptography.dll) Version: 2.3.0-beta.187+d6da5648ae<div class="codeSnippet" data-codeSnippetLanguage="cs"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button><a href="https://github.com/bcgit/bc-csharp/blob/master/crypto/src/math/ec/rfc8032/Ed25519.cs" target="_blank" rel="noopener noreferrer" class="button is-small is-light" title="View the source code"><span class="icon is-small"><i class="fa fa-file-code"></i></span><span>View Source</span></a><a href="Create a new issue: https://github.com/bcgit/bc-csharp/issues/new" target="_blank" rel="noopener noreferrer" class="button is-small is-light requestExampleLink" title="Request an example for this topic"><span class="icon is-small"><i class="fa fa-comment-dots"></i></span><span>Request Example</span></a></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cs"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="identifier">Ed25519</span></code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="vb"><div class="codeHeader"><span class="codeHeaderTitle">VB</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button><a href="https://github.com/bcgit/bc-csharp/blob/master/crypto/src/math/ec/rfc8032/Ed25519.cs" target="_blank" rel="noopener noreferrer" class="button is-small is-light" title="View the source code"><span class="icon is-small"><i class="fa fa-file-code"></i></span><span>View Source</span></a><a href="Create a new issue: https://github.com/bcgit/bc-csharp/issues/new" target="_blank" rel="noopener noreferrer" class="button is-small is-light requestExampleLink" title="Request an example for this topic"><span class="icon is-small"><i class="fa fa-comment-dots"></i></span><span>Request Example</span></a></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-vb"><span class="keyword">Public</span> <span class="keyword">NotInheritable</span> <span class="keyword">Class</span> <span class="identifier">Ed25519</span></code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="cpp"><div class="codeHeader"><span class="codeHeaderTitle">C++</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button><a href="https://github.com/bcgit/bc-csharp/blob/master/crypto/src/math/ec/rfc8032/Ed25519.cs" target="_blank" rel="noopener noreferrer" class="button is-small is-light" title="View the source code"><span class="icon is-small"><i class="fa fa-file-code"></i></span><span>View Source</span></a><a href="Create a new issue: https://github.com/bcgit/bc-csharp/issues/new" target="_blank" rel="noopener noreferrer" class="button is-small is-light requestExampleLink" title="Request an example for this topic"><span class="icon is-small"><i class="fa fa-comment-dots"></i></span><span>Request Example</span></a></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cpp"><span class="keyword">public</span> <span class="keyword">ref class</span> <span class="identifier">Ed25519</span> <span class="keyword">abstract</span> <span class="keyword">sealed</span></code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="js"><div class="codeHeader"><span class="codeHeaderTitle">JavaScript</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button><a href="https://github.com/bcgit/bc-csharp/blob/master/crypto/src/math/ec/rfc8032/Ed25519.cs" target="_blank" rel="noopener noreferrer" class="button is-small is-light" title="View the source code"><span class="icon is-small"><i class="fa fa-file-code"></i></span><span>View Source</span></a><a href="Create a new issue: https://github.com/bcgit/bc-csharp/issues/new" target="_blank" rel="noopener noreferrer" class="button is-small is-light requestExampleLink" title="Request an example for this topic"><span class="icon is-small"><i class="fa fa-comment-dots"></i></span><span>Request Example</span></a></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-js"><span class="identifier">Org.BouncyCastle.Math.EC.Rfc8032.Ed25519</span> = <span class="keyword">function</span>();

<span class="identifier">Type</span>.createClass(
	'Org.BouncyCastle.Math.EC.Rfc8032.Ed25519');</code></pre></div></div><dl class="inheritanceHierarchy"><dt>Inheritance</dt><dd><a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>  <span class="icon is-small"><i class="fa fa-arrow-right"></i></span>  <span class="selflink">Ed25519</span></dd></dl></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Remarks</h2><div id="IDBCSection">
            The implementation strategy is mostly drawn from <a href="https://ia.cr/2012/309">
            Mike Hamburg, "Fast and compact elliptic-curve cryptography"</a>, notably the "signed multi-comb" algorithm (for
            scalar multiplication by a fixed point), the "half Niels coordinates" (for precomputed points), and the
            "extensible coordinates" (for accumulators). Standard
            <a href="https://hyperelliptic.org/EFD/g1p/auto-twisted-extended.html">extended coordinates</a> are used during
            precomputations, needing only a single extra point addition formula.
            </div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Methods</h2><div id="IDEFASection"><table id="MethodList" class="table is-hoverable"><tr><td><a href="M_Org_BouncyCastle_Math_EC_Rfc8032_Ed25519_CreatePrehash.htm">CreatePrehash</a></td><td> </td></tr><tr><td><a href="M_Org_BouncyCastle_Math_EC_Rfc8032_Ed25519_EncodePublicPoint_1.htm">EncodePublicPoint(Ed25519<span id="LST8A54FA4A_0" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>PublicPoint, Span<span id="LST8A54FA4A_1" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Byte<span id="LST8A54FA4A_2" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td> </td></tr><tr><td><a href="M_Org_BouncyCastle_Math_EC_Rfc8032_Ed25519_EncodePublicPoint.htm">EncodePublicPoint(Ed25519<span id="LST8A54FA4A_3" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>PublicPoint, <span id="LST8A54FA4A_4" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST8A54FA4A_5" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32)</a></td><td> </td></tr><tr><td><a href="M_Org_BouncyCastle_Math_EC_Rfc8032_Ed25519_GeneratePrivateKey.htm">GeneratePrivateKey(SecureRandom, <span id="LST8A54FA4A_6" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST8A54FA4A_7" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>)</a></td><td> </td></tr><tr><td><a href="M_Org_BouncyCastle_Math_EC_Rfc8032_Ed25519_GeneratePrivateKey_1.htm">GeneratePrivateKey(SecureRandom, Span<span id="LST8A54FA4A_8" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Byte<span id="LST8A54FA4A_9" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td> </td></tr><tr><td><a href="M_Org_BouncyCastle_Math_EC_Rfc8032_Ed25519_GeneratePublicKey_2.htm">GeneratePublicKey(ReadOnlySpan<span id="LST8A54FA4A_10" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Byte<span id="LST8A54FA4A_11" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td> </td></tr><tr><td><a href="M_Org_BouncyCastle_Math_EC_Rfc8032_Ed25519_GeneratePublicKey.htm">GeneratePublicKey(<span id="LST8A54FA4A_12" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST8A54FA4A_13" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32)</a></td><td> </td></tr><tr><td><a href="M_Org_BouncyCastle_Math_EC_Rfc8032_Ed25519_GeneratePublicKey_3.htm">GeneratePublicKey(ReadOnlySpan<span id="LST8A54FA4A_14" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Byte<span id="LST8A54FA4A_15" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Span<span id="LST8A54FA4A_16" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Byte<span id="LST8A54FA4A_17" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td> </td></tr><tr><td><a href="M_Org_BouncyCastle_Math_EC_Rfc8032_Ed25519_GeneratePublicKey_1.htm">GeneratePublicKey(<span id="LST8A54FA4A_18" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST8A54FA4A_19" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32, <span id="LST8A54FA4A_20" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST8A54FA4A_21" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32)</a></td><td> </td></tr><tr><td><a href="M_Org_BouncyCastle_Math_EC_Rfc8032_Ed25519_Precompute.htm">Precompute</a></td><td> </td></tr><tr><td><a href="M_Org_BouncyCastle_Math_EC_Rfc8032_Ed25519_Sign_3.htm">Sign(<span id="LST8A54FA4A_22" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST8A54FA4A_23" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32, <span id="LST8A54FA4A_24" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST8A54FA4A_25" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32, Int32, <span id="LST8A54FA4A_26" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST8A54FA4A_27" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32)</a></td><td> </td></tr><tr><td><a href="M_Org_BouncyCastle_Math_EC_Rfc8032_Ed25519_Sign.htm">Sign(<span id="LST8A54FA4A_28" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST8A54FA4A_29" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32, <span id="LST8A54FA4A_30" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST8A54FA4A_31" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, <span id="LST8A54FA4A_32" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST8A54FA4A_33" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32, Int32, <span id="LST8A54FA4A_34" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST8A54FA4A_35" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32)</a></td><td> </td></tr><tr><td><a href="M_Org_BouncyCastle_Math_EC_Rfc8032_Ed25519_Sign_2.htm">Sign(<span id="LST8A54FA4A_36" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST8A54FA4A_37" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32, <span id="LST8A54FA4A_38" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST8A54FA4A_39" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32, <span id="LST8A54FA4A_40" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST8A54FA4A_41" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32, Int32, <span id="LST8A54FA4A_42" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST8A54FA4A_43" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32)</a></td><td> </td></tr><tr><td><a href="M_Org_BouncyCastle_Math_EC_Rfc8032_Ed25519_Sign_1.htm">Sign(<span id="LST8A54FA4A_44" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST8A54FA4A_45" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32, <span id="LST8A54FA4A_46" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST8A54FA4A_47" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32, <span id="LST8A54FA4A_48" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST8A54FA4A_49" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, <span id="LST8A54FA4A_50" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST8A54FA4A_51" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32, Int32, <span id="LST8A54FA4A_52" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST8A54FA4A_53" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32)</a></td><td> </td></tr><tr><td><a href="M_Org_BouncyCastle_Math_EC_Rfc8032_Ed25519_SignPrehash.htm">SignPrehash(<span id="LST8A54FA4A_54" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST8A54FA4A_55" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32, <span id="LST8A54FA4A_56" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST8A54FA4A_57" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, IDigest, <span id="LST8A54FA4A_58" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST8A54FA4A_59" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32)</a></td><td> </td></tr><tr><td><a href="M_Org_BouncyCastle_Math_EC_Rfc8032_Ed25519_SignPrehash_1.htm">SignPrehash(<span id="LST8A54FA4A_60" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST8A54FA4A_61" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32, <span id="LST8A54FA4A_62" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST8A54FA4A_63" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, <span id="LST8A54FA4A_64" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST8A54FA4A_65" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32, <span id="LST8A54FA4A_66" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST8A54FA4A_67" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32)</a></td><td> </td></tr><tr><td><a href="M_Org_BouncyCastle_Math_EC_Rfc8032_Ed25519_SignPrehash_2.htm">SignPrehash(<span id="LST8A54FA4A_68" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST8A54FA4A_69" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32, <span id="LST8A54FA4A_70" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST8A54FA4A_71" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32, <span id="LST8A54FA4A_72" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST8A54FA4A_73" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, IDigest, <span id="LST8A54FA4A_74" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST8A54FA4A_75" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32)</a></td><td> </td></tr><tr><td><a href="M_Org_BouncyCastle_Math_EC_Rfc8032_Ed25519_SignPrehash_3.htm">SignPrehash(<span id="LST8A54FA4A_76" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST8A54FA4A_77" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32, <span id="LST8A54FA4A_78" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST8A54FA4A_79" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32, <span id="LST8A54FA4A_80" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST8A54FA4A_81" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, <span id="LST8A54FA4A_82" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST8A54FA4A_83" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32, <span id="LST8A54FA4A_84" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST8A54FA4A_85" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32)</a></td><td> </td></tr><tr><td><a href="M_Org_BouncyCastle_Math_EC_Rfc8032_Ed25519_ValidatePublicKeyFull_1.htm">ValidatePublicKeyFull(ReadOnlySpan<span id="LST8A54FA4A_86" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Byte<span id="LST8A54FA4A_87" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td> </td></tr><tr><td><a href="M_Org_BouncyCastle_Math_EC_Rfc8032_Ed25519_ValidatePublicKeyFull.htm">ValidatePublicKeyFull(<span id="LST8A54FA4A_88" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST8A54FA4A_89" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32)</a></td><td> </td></tr><tr><td><a href="M_Org_BouncyCastle_Math_EC_Rfc8032_Ed25519_ValidatePublicKeyFullExport_1.htm">ValidatePublicKeyFullExport(ReadOnlySpan<span id="LST8A54FA4A_90" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Byte<span id="LST8A54FA4A_91" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td> </td></tr><tr><td><a href="M_Org_BouncyCastle_Math_EC_Rfc8032_Ed25519_ValidatePublicKeyFullExport.htm">ValidatePublicKeyFullExport(<span id="LST8A54FA4A_92" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST8A54FA4A_93" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32)</a></td><td> </td></tr><tr><td><a href="M_Org_BouncyCastle_Math_EC_Rfc8032_Ed25519_ValidatePublicKeyPartial_1.htm">ValidatePublicKeyPartial(ReadOnlySpan<span id="LST8A54FA4A_94" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Byte<span id="LST8A54FA4A_95" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td> </td></tr><tr><td><a href="M_Org_BouncyCastle_Math_EC_Rfc8032_Ed25519_ValidatePublicKeyPartial.htm">ValidatePublicKeyPartial(<span id="LST8A54FA4A_96" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST8A54FA4A_97" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32)</a></td><td> </td></tr><tr><td><a href="M_Org_BouncyCastle_Math_EC_Rfc8032_Ed25519_ValidatePublicKeyPartialExport_1.htm">ValidatePublicKeyPartialExport(ReadOnlySpan<span id="LST8A54FA4A_98" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Byte<span id="LST8A54FA4A_99" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td> </td></tr><tr><td><a href="M_Org_BouncyCastle_Math_EC_Rfc8032_Ed25519_ValidatePublicKeyPartialExport.htm">ValidatePublicKeyPartialExport(<span id="LST8A54FA4A_100" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST8A54FA4A_101" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32)</a></td><td> </td></tr><tr><td><a href="M_Org_BouncyCastle_Math_EC_Rfc8032_Ed25519_Verify_1.htm">Verify(<span id="LST8A54FA4A_102" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST8A54FA4A_103" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32, Ed25519<span id="LST8A54FA4A_104" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>PublicPoint, <span id="LST8A54FA4A_105" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST8A54FA4A_106" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32, Int32)</a></td><td> </td></tr><tr><td><a href="M_Org_BouncyCastle_Math_EC_Rfc8032_Ed25519_Verify.htm">Verify(<span id="LST8A54FA4A_107" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST8A54FA4A_108" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32, Ed25519<span id="LST8A54FA4A_109" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>PublicPoint, <span id="LST8A54FA4A_110" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST8A54FA4A_111" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, <span id="LST8A54FA4A_112" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST8A54FA4A_113" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32, Int32)</a></td><td> </td></tr><tr><td><a href="M_Org_BouncyCastle_Math_EC_Rfc8032_Ed25519_Verify_3.htm">Verify(<span id="LST8A54FA4A_114" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST8A54FA4A_115" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32, <span id="LST8A54FA4A_116" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST8A54FA4A_117" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32, <span id="LST8A54FA4A_118" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST8A54FA4A_119" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32, Int32)</a></td><td> </td></tr><tr><td><a href="M_Org_BouncyCastle_Math_EC_Rfc8032_Ed25519_Verify_2.htm">Verify(<span id="LST8A54FA4A_120" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST8A54FA4A_121" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32, <span id="LST8A54FA4A_122" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST8A54FA4A_123" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32, <span id="LST8A54FA4A_124" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST8A54FA4A_125" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, <span id="LST8A54FA4A_126" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST8A54FA4A_127" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32, Int32)</a></td><td> </td></tr><tr><td><a href="M_Org_BouncyCastle_Math_EC_Rfc8032_Ed25519_VerifyPrehash.htm">VerifyPrehash(<span id="LST8A54FA4A_128" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST8A54FA4A_129" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32, Ed25519<span id="LST8A54FA4A_130" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>PublicPoint, <span id="LST8A54FA4A_131" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST8A54FA4A_132" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, IDigest)</a></td><td> </td></tr><tr><td><a href="M_Org_BouncyCastle_Math_EC_Rfc8032_Ed25519_VerifyPrehash_1.htm">VerifyPrehash(<span id="LST8A54FA4A_133" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST8A54FA4A_134" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32, Ed25519<span id="LST8A54FA4A_135" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>PublicPoint, <span id="LST8A54FA4A_136" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST8A54FA4A_137" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, <span id="LST8A54FA4A_138" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST8A54FA4A_139" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32)</a></td><td> </td></tr><tr><td><a href="M_Org_BouncyCastle_Math_EC_Rfc8032_Ed25519_VerifyPrehash_2.htm">VerifyPrehash(<span id="LST8A54FA4A_140" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST8A54FA4A_141" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32, <span id="LST8A54FA4A_142" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST8A54FA4A_143" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32, <span id="LST8A54FA4A_144" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST8A54FA4A_145" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, IDigest)</a></td><td> </td></tr><tr><td><a href="M_Org_BouncyCastle_Math_EC_Rfc8032_Ed25519_VerifyPrehash_3.htm">VerifyPrehash(<span id="LST8A54FA4A_146" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST8A54FA4A_147" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32, <span id="LST8A54FA4A_148" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST8A54FA4A_149" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32, <span id="LST8A54FA4A_150" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST8A54FA4A_151" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, <span id="LST8A54FA4A_152" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST8A54FA4A_153" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32)</a></td><td> </td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Fields</h2><div id="IDAFASection"><table id="FieldList" class="table is-hoverable"><tr><td><a href="F_Org_BouncyCastle_Math_EC_Rfc8032_Ed25519_PrehashSize.htm">PrehashSize</a></td><td> </td></tr><tr><td><a href="F_Org_BouncyCastle_Math_EC_Rfc8032_Ed25519_PublicKeySize.htm">PublicKeySize</a></td><td> </td></tr><tr><td><a href="F_Org_BouncyCastle_Math_EC_Rfc8032_Ed25519_SecretKeySize.htm">SecretKeySize</a></td><td> </td></tr><tr><td><a href="F_Org_BouncyCastle_Math_EC_Rfc8032_Ed25519_SignatureSize.htm">SignatureSize</a></td><td> </td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>See Also</h2><div id="seeAlsoSection"><h4>Reference</h4><div><a href="N_Org_BouncyCastle_Math_EC_Rfc8032.htm">Org.BouncyCastle.Math.EC.Rfc8032 Namespace</a></div></div></div><div id="InThisArticleColumn" class="column is-hidden-mobile"><nav class="menu sticky is-hidden"><p class="menu-label"><strong>In This Article</strong></p><ul id="InThisArticleMenu" class="menu-list"><li><a class="quickLink">Definition</a></li><li><a class="quickLink">Remarks</a></li><li><a class="quickLink">Methods</a></li><li><a class="quickLink">Fields</a></li><li><a class="quickLink">See Also</a></li></ul></nav></div></div></div><footer id="PageFooter" class="footer border-top py-3 fixedFooter"><div class="columns"><div class="column"><span class="site-footer-credits">
<a href="https://gridprotectionalliance.github.io/bc-csharp/" target="_self">Documentation Home</a> <br /><br />
Generated by <a href="https://github.com/EWSoftware/SHFB" target="_blank">Sandcastle Help File Builder</a>
</span><p><a href="https://github.com/bcgit/bc-csharp/blob/master/LICENSE.md" target="_blank" rel="noopener noreferrer">Copyright © 2000-2023 The Legion of the Bouncy Castle Inc.</a></p><div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:feedback-crypto%40bouncycastle.org?Subject=Bouncy%20Castle%20Library">Feedback</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        </script> 
				</div><div class="column"> 
				</div></div></footer></div><script>$(function(){
SetDefaultLanguage("cs");
LoadTocFile(null, null);
InitializeQuickLinks();

$(".toggleSection" ).click(function () {
    SectionExpandCollapse(this);
});

$(".toggleSection").keypress(function () {
    SectionExpandCollapseCheckKey(this, event)
});
hljs.highlightAll();
});</script><script>
		$(".requestExampleLink").each(function ()
		{
			if(this.href.substring(0, 4).toLowerCase() === "http")
				this.href += "?title=";
			else
				this.href += "?subject=Bouncy%20Castle%20Library: ";

			this.href += "Add an Example for " + encodeURIComponent(document.title) + "&amp;body=" +
				encodeURIComponent("Please add an example for " + document.title + ".%0D%0DTODO (optional): Describe a specific " +
				"scenario you would like to see addressed.%0D%0DHelp Topic: " + window.location.href).replace(/%250D/g, "%0D");
		});
	</script></body></html>