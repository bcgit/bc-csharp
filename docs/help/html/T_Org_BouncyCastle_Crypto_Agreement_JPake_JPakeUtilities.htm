<!DOCTYPE html ><html lang="en-US"><head><meta charset="utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" href="../css/bulma.css" /><link rel="stylesheet" href="../css/font-awesome.min.css" /><link rel="stylesheet" href="../css/presentationStyle.css" /><link rel="stylesheet" href="../css/vs.min.css" /><script src="../scripts/jquery-3.5.1.min.js"></script><script src="../scripts/clipboard.min.js"></script><script src="../scripts/highlight.min.js"></script><script src="../scripts/presentationStyle.js"></script><title>JPakeUtilities Class</title><meta name="Title" content="JPakeUtilities" /><meta name="Help.Id" content="T:Org.BouncyCastle.Crypto.Agreement.JPake.JPakeUtilities" /><meta name="Help.ContentType" content="Reference" /><meta name="container" content="Org.BouncyCastle.Crypto.Agreement.JPake" /><meta name="guid" content="T_Org_BouncyCastle_Crypto_Agreement_JPake_JPakeUtilities" /><meta name="Description" content="Primitives needed for a J-PAKE exchange. The recommended way to perform a J-PAKE exchange is by using two JPAKEParticipants. Internally, those participants call these primitive operations in JPakeUtilities." /><meta name="tocFile" content="../toc/ID0WB0.xml" /></head><body><div class="fixedLayout"><div id="Header" class="fixedHeader"><div class="pageHeader level mb-0 py-2 px-4"><div id="TitleContainer" class="level-left"><div class="level-item"><a target="_blank" rel="noopener noreferrer" href="https://www.bouncycastle.org/csharp/"><img alt="Bouncy Castle Cryptography Library for .NET" src="../icons/bc-square-48.png" /></a></div><div id="DocumentationTitle" class="level-item">Bouncy Castle Library</div></div><div id="LangFilterSearchContainer" class="level-right"><div class="level-item"><div class="dropdown is-hoverable"><div class="dropdown-trigger"><button class="button" aria-haspopup="true" aria-controls="dropdown-menu"><span id="CurrentLanguage"></span><span class="icon is-small"><i class="fa fa-angle-down" aria-hidden="true"></i></span></button></div><div class="dropdown-menu" role="menu"><div id="LanguageSelections" class="dropdown-content"><a class="dropdown-item languageFilterItem" data-languageId="cs">C#</a><a class="dropdown-item languageFilterItem" data-languageId="vb">VB</a><a class="dropdown-item languageFilterItem" data-languageId="cpp">C++</a><a class="dropdown-item languageFilterItem" data-languageId="js">JavaScript</a></div></div></div></div><div class="level-item"><form id="SearchForm" action="#" onsubmit="TransferToSearchPage(); return false;"><div class="field"><div class="control has-icons-left"><input id="SearchTerms" class="input" type="text" maxlength="200" placeholder="Search" /><span class="icon is-small is-left"><i class="fa fa-search"></i></span><button id="SearchButton" type="submit" class="is-hidden"></button></div></div></form></div></div></div></div><div class="fixedContent"><nav class="breadcrumb my-1 px-2 border-bottom" role="navigation"><ul id="TopicBreadcrumbs" /></nav><div id="ContentContainer" class="columns pl-5 pr-5 fixedContent"><div id="ShowHideTOCColumn" class="column is-hidden-tablet"><a id="ShowHideTOC">Show/Hide TOC</a></div><div id="TOCColumn" class="column is-hidden-mobile"><nav class="toc"><ul id="TableOfContents" class="toc-menu" /></nav></div><div id="Resizer" class="is-hidden"></div><div id="TopicContent" class="column content is-7"><h1>JPake<wbr />Utilities Class</h1><div class="summary">
            Primitives needed for a J-PAKE exchange.
            
            The recommended way to perform a J-PAKE exchange is by using
            two JPAKEParticipants.  Internally, those participants
            call these primitive operations in JPakeUtilities.
            
            The primitives, however, can be used without a JPAKEParticipant if needed.
            </div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Definition</h2><div id="IDBSection"><strong>Namespace:</strong> <a href="N_Org_BouncyCastle_Crypto_Agreement_JPake.htm">Org.BouncyCastle.Crypto.Agreement.JPake</a><br /><strong>Assembly:</strong> BouncyCastle.Cryptography (in BouncyCastle.Cryptography.dll) Version: 2.3.0-beta.187+d6da5648ae<div class="codeSnippet" data-codeSnippetLanguage="cs"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button><a href="https://github.com/bcgit/bc-csharp/blob/master/crypto/src/crypto/agreement/jpake/JPakeUtilities.cs" target="_blank" rel="noopener noreferrer" class="button is-small is-light" title="View the source code"><span class="icon is-small"><i class="fa fa-file-code"></i></span><span>View Source</span></a><a href="Create a new issue: https://github.com/bcgit/bc-csharp/issues/new" target="_blank" rel="noopener noreferrer" class="button is-small is-light requestExampleLink" title="Request an example for this topic"><span class="icon is-small"><i class="fa fa-comment-dots"></i></span><span>Request Example</span></a></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cs"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">class</span> <span class="identifier">JPakeUtilities</span></code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="vb"><div class="codeHeader"><span class="codeHeaderTitle">VB</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button><a href="https://github.com/bcgit/bc-csharp/blob/master/crypto/src/crypto/agreement/jpake/JPakeUtilities.cs" target="_blank" rel="noopener noreferrer" class="button is-small is-light" title="View the source code"><span class="icon is-small"><i class="fa fa-file-code"></i></span><span>View Source</span></a><a href="Create a new issue: https://github.com/bcgit/bc-csharp/issues/new" target="_blank" rel="noopener noreferrer" class="button is-small is-light requestExampleLink" title="Request an example for this topic"><span class="icon is-small"><i class="fa fa-comment-dots"></i></span><span>Request Example</span></a></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-vb"><span class="keyword">Public</span> <span class="keyword">MustInherit</span> <span class="keyword">Class</span> <span class="identifier">JPakeUtilities</span></code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="cpp"><div class="codeHeader"><span class="codeHeaderTitle">C++</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button><a href="https://github.com/bcgit/bc-csharp/blob/master/crypto/src/crypto/agreement/jpake/JPakeUtilities.cs" target="_blank" rel="noopener noreferrer" class="button is-small is-light" title="View the source code"><span class="icon is-small"><i class="fa fa-file-code"></i></span><span>View Source</span></a><a href="Create a new issue: https://github.com/bcgit/bc-csharp/issues/new" target="_blank" rel="noopener noreferrer" class="button is-small is-light requestExampleLink" title="Request an example for this topic"><span class="icon is-small"><i class="fa fa-comment-dots"></i></span><span>Request Example</span></a></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cpp"><span class="keyword">public</span> <span class="keyword">ref class</span> <span class="identifier">JPakeUtilities</span> <span class="keyword">abstract</span></code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="js"><div class="codeHeader"><span class="codeHeaderTitle">JavaScript</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button><a href="https://github.com/bcgit/bc-csharp/blob/master/crypto/src/crypto/agreement/jpake/JPakeUtilities.cs" target="_blank" rel="noopener noreferrer" class="button is-small is-light" title="View the source code"><span class="icon is-small"><i class="fa fa-file-code"></i></span><span>View Source</span></a><a href="Create a new issue: https://github.com/bcgit/bc-csharp/issues/new" target="_blank" rel="noopener noreferrer" class="button is-small is-light requestExampleLink" title="Request an example for this topic"><span class="icon is-small"><i class="fa fa-comment-dots"></i></span><span>Request Example</span></a></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-js"><span class="identifier">Org.BouncyCastle.Crypto.Agreement.JPake.JPakeUtilities</span> = <span class="keyword">function</span>();

<span class="identifier">Type</span>.createClass(
	'Org.BouncyCastle.Crypto.Agreement.JPake.JPakeUtilities');</code></pre></div></div><dl class="inheritanceHierarchy"><dt>Inheritance</dt><dd><a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>  <span class="icon is-small"><i class="fa fa-arrow-right"></i></span>  <span class="selflink">JPakeUtilities</span></dd></dl></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Constructors</h2><div id="IDCFASection"><table id="ConstructorList" class="table is-hoverable"><tr><td><a href="M_Org_BouncyCastle_Crypto_Agreement_JPake_JPakeUtilities__ctor.htm">JPakeUtilities</a></td><td>Initializes a new instance of the <span class="selflink">JPakeUtilities</span> class</td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Methods</h2><div id="IDDFASection"><table id="MethodList" class="table is-hoverable"><tr><td><a href="M_Org_BouncyCastle_Crypto_Agreement_JPake_JPakeUtilities_CalculateA.htm">CalculateA</a></td><td>
            Calculate A as done in round 2. 
            </td></tr><tr><td><a href="M_Org_BouncyCastle_Crypto_Agreement_JPake_JPakeUtilities_CalculateGA.htm">CalculateGA</a></td><td>
            Calculate ga as done in round 2.
            </td></tr><tr><td><a href="M_Org_BouncyCastle_Crypto_Agreement_JPake_JPakeUtilities_CalculateGx.htm">CalculateGx</a></td><td>
            Calculate g^x mod p as done in round 1.
            </td></tr><tr><td><a href="M_Org_BouncyCastle_Crypto_Agreement_JPake_JPakeUtilities_CalculateKeyingMaterial.htm">CalculateKeyingMaterial</a></td><td>
            Calculates the keying material, which can be done after round 2 has completed.
            A session key must be derived from this key material using a secure key derivation function (KDF).
            The KDF used to derive the key is handled externally (i.e. not by JPAKEParticipant).
            
            KeyingMaterial = (B/g^{x2*x4*s})^x2
            </td></tr><tr><td><a href="M_Org_BouncyCastle_Crypto_Agreement_JPake_JPakeUtilities_CalculateMacTag.htm">CalculateMacTag</a></td><td>
             Calculates the MacTag (to be used for key confirmation), as defined by
             <a href="http://csrc.nist.gov/publications/nistpubs/800-56A/SP800-56A_Revision1_Mar08-2007.pdf">NIST SP 800-56A Revision 1</a>,
             Section 8.2 Unilateral Key Confirmation for Key Agreement Schemes.
            
             MacTag = HMAC(MacKey, MacLen, MacData)
             MacKey = H(K || "JPAKE_KC")
             MacData = "KC_1_U" || participantId || partnerParticipantId || gx1 || gx2 || gx3 || gx4
            
             Note that both participants use "KC_1_U" because the sender of the round 3 message
             is always the initiator for key confirmation.
            
             HMAC = {@link HMac} used with the given {@link Digest}
             H = The given {@link Digest}
             MacLen = length of MacTag
             </td></tr><tr><td><a href="M_Org_BouncyCastle_Crypto_Agreement_JPake_JPakeUtilities_CalculateS_3.htm">CalculateS(<span id="LST75658C24_0" data-languageSpecificText="cpp=array&lt;"></span>Char<span id="LST75658C24_1" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>)</a></td><td>
            Converts the given password to a BigInteger
            for use in arithmetic calculations.
            <br /><span class="tag is-danger">Obsolete.</span></td></tr><tr><td><a href="M_Org_BouncyCastle_Crypto_Agreement_JPake_JPakeUtilities_CalculateS.htm">CalculateS(BigInteger, <span id="LST75658C24_2" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST75658C24_3" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>)</a></td><td>Converts the given password to a BigInteger mod q.</td></tr><tr><td><a href="M_Org_BouncyCastle_Crypto_Agreement_JPake_JPakeUtilities_CalculateS_1.htm">CalculateS(BigInteger, <span id="LST75658C24_4" data-languageSpecificText="cpp=array&lt;"></span>Char<span id="LST75658C24_5" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>)</a></td><td>Converts the given password (UTF8 encoded) to a BigInteger mod q.</td></tr><tr><td><a href="M_Org_BouncyCastle_Crypto_Agreement_JPake_JPakeUtilities_CalculateS_2.htm">CalculateS(BigInteger, ReadOnlySpan<span id="LST75658C24_6" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Char<span id="LST75658C24_7" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>Converts the given password (UTF8 encoded) to a BigInteger mod q.</td></tr><tr><td><a href="M_Org_BouncyCastle_Crypto_Agreement_JPake_JPakeUtilities_CalculateX2s.htm">CalculateX2s</a></td><td>
            Calculate x2 * s as done in round 2.
            </td></tr><tr><td><a href="M_Org_BouncyCastle_Crypto_Agreement_JPake_JPakeUtilities_CalculateZeroKnowledgeProof.htm">CalculateZeroKnowledgeProof</a></td><td>
            Calculate a zero knowledge proof of x using Schnorr's signature.
            The returned array has two elements {g^v, r = v-x*h} for x.
            </td></tr><tr><td><a href="https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)" target="_blank" rel="noopener noreferrer">Equals</a></td><td>Determines whether the specified object is equal to the current object.<br />(Inherited from <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>)</td></tr><tr><td><a href="https://learn.microsoft.com/dotnet/api/system.object.finalize#system-object-finalize" target="_blank" rel="noopener noreferrer">Finalize</a></td><td>Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.<br />(Inherited from <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>)</td></tr><tr><td><a href="M_Org_BouncyCastle_Crypto_Agreement_JPake_JPakeUtilities_GenerateX1.htm">GenerateX1</a></td><td>
            Return a value that can be used as x1 or x3 during round 1.
            The returned value is a random value in the range [0, q-1].
            </td></tr><tr><td><a href="M_Org_BouncyCastle_Crypto_Agreement_JPake_JPakeUtilities_GenerateX2.htm">GenerateX2</a></td><td>
            Return a value that can be used as x2 or x4 during round 1.
            The returned value is a random value in the range [1, q-1].
            </td></tr><tr><td><a href="https://learn.microsoft.com/dotnet/api/system.object.gethashcode#system-object-gethashcode" target="_blank" rel="noopener noreferrer">GetHashCode</a></td><td>Serves as the default hash function.<br />(Inherited from <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>)</td></tr><tr><td><a href="https://learn.microsoft.com/dotnet/api/system.object.gettype#system-object-gettype" target="_blank" rel="noopener noreferrer">GetType</a></td><td>Gets the <a href="https://learn.microsoft.com/dotnet/api/system.type" target="_blank" rel="noopener noreferrer">Type</a> of the current instance.<br />(Inherited from <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>)</td></tr><tr><td><a href="https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone#system-object-memberwiseclone" target="_blank" rel="noopener noreferrer">MemberwiseClone</a></td><td>Creates a shallow copy of the current <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>.<br />(Inherited from <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>)</td></tr><tr><td><a href="https://learn.microsoft.com/dotnet/api/system.object.tostring#system-object-tostring" target="_blank" rel="noopener noreferrer">ToString</a></td><td>Returns a string that represents the current object.<br />(Inherited from <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>)</td></tr><tr><td><a href="M_Org_BouncyCastle_Crypto_Agreement_JPake_JPakeUtilities_ValidateGa.htm">ValidateGa</a></td><td>
            Validates that ga is not 1.
            
            As described by Feng Hao...
            Alice could simply check ga != 1 to ensure it is a generator.
            In fact, as we will explain in Section 3, (x1 + x3 + x4 ) is random over Zq even in the face of active attacks.
            Hence, the probability for ga = 1 is extremely small - on the order of 2^160 for 160-bit q.
            
            throws CryptoException if ga is 1
            </td></tr><tr><td><a href="M_Org_BouncyCastle_Crypto_Agreement_JPake_JPakeUtilities_ValidateGx4.htm">ValidateGx4</a></td><td>
            Validates that g^x4 is not 1.
            throws CryptoException if g^x4 is 1
            </td></tr><tr><td><a href="M_Org_BouncyCastle_Crypto_Agreement_JPake_JPakeUtilities_ValidateMacTag.htm">ValidateMacTag</a></td><td>
            Validates the MacTag received from the partner participant.
            
            throws CryptoException if the participantId strings are equal.
            </td></tr><tr><td><a href="M_Org_BouncyCastle_Crypto_Agreement_JPake_JPakeUtilities_ValidateNotNull.htm">ValidateNotNull</a></td><td>
            Validates that the given object is not null.
            throws NullReferenceException if the object is null.
            </td></tr><tr><td><a href="M_Org_BouncyCastle_Crypto_Agreement_JPake_JPakeUtilities_ValidateParticipantIdsDiffer.htm">ValidateParticipantIdsDiffer</a></td><td>
             Validates that the given participant ids are not equal.
             (For the J-PAKE exchange, each participant must use a unique id.)
            
             Throws CryptoException if the participantId strings are equal.
             </td></tr><tr><td><a href="M_Org_BouncyCastle_Crypto_Agreement_JPake_JPakeUtilities_ValidateParticipantIdsEqual.htm">ValidateParticipantIdsEqual</a></td><td>
            Validates that the given participant ids are equal.
            This is used to ensure that the payloads received from
            each round all come from the same participant.
            </td></tr><tr><td><a href="M_Org_BouncyCastle_Crypto_Agreement_JPake_JPakeUtilities_ValidateZeroKnowledgeProof.htm">ValidateZeroKnowledgeProof</a></td><td>
            Validates the zero knowledge proof (generated by
            calculateZeroKnowledgeProof(BigInteger, BigInteger, BigInteger, BigInteger, BigInteger, string, Digest, SecureRandom)
            is correct.
            
            throws CryptoException if the zero knowledge proof is not correct
            </td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Fields</h2><div id="IDAFASection"><table id="FieldList" class="table is-hoverable"><tr><td><a href="F_Org_BouncyCastle_Crypto_Agreement_JPake_JPakeUtilities_One.htm">One</a></td><td> </td></tr><tr><td><a href="F_Org_BouncyCastle_Crypto_Agreement_JPake_JPakeUtilities_Zero.htm">Zero</a></td><td> </td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>See Also</h2><div id="seeAlsoSection"><h4>Reference</h4><div><a href="N_Org_BouncyCastle_Crypto_Agreement_JPake.htm">Org.BouncyCastle.Crypto.Agreement.JPake Namespace</a></div></div></div><div id="InThisArticleColumn" class="column is-hidden-mobile"><nav class="menu sticky is-hidden"><p class="menu-label"><strong>In This Article</strong></p><ul id="InThisArticleMenu" class="menu-list"><li><a class="quickLink">Definition</a></li><li><a class="quickLink">Constructors</a></li><li><a class="quickLink">Methods</a></li><li><a class="quickLink">Fields</a></li><li><a class="quickLink">See Also</a></li></ul></nav></div></div></div><footer id="PageFooter" class="footer border-top py-3 fixedFooter"><div class="columns"><div class="column"><span class="site-footer-credits">
<a href="https://gridprotectionalliance.github.io/bc-csharp/" target="_self">Documentation Home</a> <br /><br />
Generated by <a href="https://github.com/EWSoftware/SHFB" target="_blank">Sandcastle Help File Builder</a>
</span><p><a href="https://github.com/bcgit/bc-csharp/blob/master/LICENSE.md" target="_blank" rel="noopener noreferrer">Copyright © 2000-2023 The Legion of the Bouncy Castle Inc.</a></p><div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:feedback-crypto%40bouncycastle.org?Subject=Bouncy%20Castle%20Library">Feedback</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        </script> 
				</div><div class="column"> 
				</div></div></footer></div><script>$(function(){
SetDefaultLanguage("cs");
LoadTocFile(null, null);
InitializeQuickLinks();

$(".toggleSection" ).click(function () {
    SectionExpandCollapse(this);
});

$(".toggleSection").keypress(function () {
    SectionExpandCollapseCheckKey(this, event)
});
hljs.highlightAll();
});</script><script>
		$(".requestExampleLink").each(function ()
		{
			if(this.href.substring(0, 4).toLowerCase() === "http")
				this.href += "?title=";
			else
				this.href += "?subject=Bouncy%20Castle%20Library: ";

			this.href += "Add an Example for " + encodeURIComponent(document.title) + "&amp;body=" +
				encodeURIComponent("Please add an example for " + document.title + ".%0D%0DTODO (optional): Describe a specific " +
				"scenario you would like to see addressed.%0D%0DHelp Topic: " + window.location.href).replace(/%250D/g, "%0D");
		});
	</script></body></html>