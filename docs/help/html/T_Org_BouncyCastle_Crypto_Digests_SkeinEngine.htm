<!DOCTYPE html ><html lang="en-US"><head><meta charset="utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" href="../css/bulma.css" /><link rel="stylesheet" href="../css/font-awesome.min.css" /><link rel="stylesheet" href="../css/presentationStyle.css" /><link rel="stylesheet" href="../css/vs.min.css" /><script src="../scripts/jquery-3.5.1.min.js"></script><script src="../scripts/clipboard.min.js"></script><script src="../scripts/highlight.min.js"></script><script src="../scripts/presentationStyle.js"></script><title>SkeinEngine Class</title><meta name="Title" content="SkeinEngine" /><meta name="Help.Id" content="T:Org.BouncyCastle.Crypto.Digests.SkeinEngine" /><meta name="Help.ContentType" content="Reference" /><meta name="container" content="Org.BouncyCastle.Crypto.Digests" /><meta name="guid" content="T_Org_BouncyCastle_Crypto_Digests_SkeinEngine" /><meta name="Description" content="Implementation of the Skein family of parameterised hash functions in 256, 512 and 1024 bit block sizes, based on the Threefish tweakable block cipher." /><meta name="tocFile" content="../toc/ID0ZB0.xml" /></head><body><div class="fixedLayout"><div id="Header" class="fixedHeader"><div class="pageHeader level mb-0 py-2 px-4"><div id="TitleContainer" class="level-left"><div class="level-item"><a target="_blank" rel="noopener noreferrer" href="https://www.bouncycastle.org/csharp/"><img alt="Bouncy Castle Cryptography Library for .NET" src="../icons/bc-square-48.png" /></a></div><div id="DocumentationTitle" class="level-item">Bouncy Castle Library</div></div><div id="LangFilterSearchContainer" class="level-right"><div class="level-item"><div class="dropdown is-hoverable"><div class="dropdown-trigger"><button class="button" aria-haspopup="true" aria-controls="dropdown-menu"><span id="CurrentLanguage"></span><span class="icon is-small"><i class="fa fa-angle-down" aria-hidden="true"></i></span></button></div><div class="dropdown-menu" role="menu"><div id="LanguageSelections" class="dropdown-content"><a class="dropdown-item languageFilterItem" data-languageId="cs">C#</a><a class="dropdown-item languageFilterItem" data-languageId="vb">VB</a><a class="dropdown-item languageFilterItem" data-languageId="cpp">C++</a><a class="dropdown-item languageFilterItem" data-languageId="js">JavaScript</a></div></div></div></div><div class="level-item"><form id="SearchForm" action="#" onsubmit="TransferToSearchPage(); return false;"><div class="field"><div class="control has-icons-left"><input id="SearchTerms" class="input" type="text" maxlength="200" placeholder="Search" /><span class="icon is-small is-left"><i class="fa fa-search"></i></span><button id="SearchButton" type="submit" class="is-hidden"></button></div></div></form></div></div></div></div><div class="fixedContent"><nav class="breadcrumb my-1 px-2 border-bottom" role="navigation"><ul id="TopicBreadcrumbs" /></nav><div id="ContentContainer" class="columns pl-5 pr-5 fixedContent"><div id="ShowHideTOCColumn" class="column is-hidden-tablet"><a id="ShowHideTOC">Show/Hide TOC</a></div><div id="TOCColumn" class="column is-hidden-mobile"><nav class="toc"><ul id="TableOfContents" class="toc-menu" /></nav></div><div id="Resizer" class="is-hidden"></div><div id="TopicContent" class="column content is-7"><h1>Skein<wbr />Engine Class</h1><div class="summary">
            Implementation of the Skein family of parameterised hash functions in 256, 512 and 1024 bit block
            sizes, based on the <a href="T_Org_BouncyCastle_Crypto_Engines_ThreefishEngine.htm">Threefish</a> tweakable block cipher.
            </div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Definition</h2><div id="IDBSection"><strong>Namespace:</strong> <a href="N_Org_BouncyCastle_Crypto_Digests.htm">Org.BouncyCastle.Crypto.Digests</a><br /><strong>Assembly:</strong> BouncyCastle.Cryptography (in BouncyCastle.Cryptography.dll) Version: 2.3.0-beta.187+d6da5648ae<div class="codeSnippet" data-codeSnippetLanguage="cs"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button><a href="https://github.com/bcgit/bc-csharp/blob/master/crypto/src/crypto/digests/SkeinEngine.cs" target="_blank" rel="noopener noreferrer" class="button is-small is-light" title="View the source code"><span class="icon is-small"><i class="fa fa-file-code"></i></span><span>View Source</span></a><a href="Create a new issue: https://github.com/bcgit/bc-csharp/issues/new" target="_blank" rel="noopener noreferrer" class="button is-small is-light requestExampleLink" title="Request an example for this topic"><span class="icon is-small"><i class="fa fa-comment-dots"></i></span><span>Request Example</span></a></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cs"><span class="keyword">public</span> <span class="keyword">class</span> <span class="identifier">SkeinEngine</span> : <a href="T_Org_BouncyCastle_Utilities_IMemoable.htm">IMemoable</a></code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="vb"><div class="codeHeader"><span class="codeHeaderTitle">VB</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button><a href="https://github.com/bcgit/bc-csharp/blob/master/crypto/src/crypto/digests/SkeinEngine.cs" target="_blank" rel="noopener noreferrer" class="button is-small is-light" title="View the source code"><span class="icon is-small"><i class="fa fa-file-code"></i></span><span>View Source</span></a><a href="Create a new issue: https://github.com/bcgit/bc-csharp/issues/new" target="_blank" rel="noopener noreferrer" class="button is-small is-light requestExampleLink" title="Request an example for this topic"><span class="icon is-small"><i class="fa fa-comment-dots"></i></span><span>Request Example</span></a></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-vb"><span class="keyword">Public</span> <span class="keyword">Class</span> <span class="identifier">SkeinEngine</span>
	<span class="keyword">Implements</span> <a href="T_Org_BouncyCastle_Utilities_IMemoable.htm">IMemoable</a></code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="cpp"><div class="codeHeader"><span class="codeHeaderTitle">C++</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button><a href="https://github.com/bcgit/bc-csharp/blob/master/crypto/src/crypto/digests/SkeinEngine.cs" target="_blank" rel="noopener noreferrer" class="button is-small is-light" title="View the source code"><span class="icon is-small"><i class="fa fa-file-code"></i></span><span>View Source</span></a><a href="Create a new issue: https://github.com/bcgit/bc-csharp/issues/new" target="_blank" rel="noopener noreferrer" class="button is-small is-light requestExampleLink" title="Request an example for this topic"><span class="icon is-small"><i class="fa fa-comment-dots"></i></span><span>Request Example</span></a></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cpp"><span class="keyword">public</span> <span class="keyword">ref class</span> <span class="identifier">SkeinEngine</span> : <a href="T_Org_BouncyCastle_Utilities_IMemoable.htm">IMemoable</a></code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="js"><div class="codeHeader"><span class="codeHeaderTitle">JavaScript</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button><a href="https://github.com/bcgit/bc-csharp/blob/master/crypto/src/crypto/digests/SkeinEngine.cs" target="_blank" rel="noopener noreferrer" class="button is-small is-light" title="View the source code"><span class="icon is-small"><i class="fa fa-file-code"></i></span><span>View Source</span></a><a href="Create a new issue: https://github.com/bcgit/bc-csharp/issues/new" target="_blank" rel="noopener noreferrer" class="button is-small is-light requestExampleLink" title="Request an example for this topic"><span class="icon is-small"><i class="fa fa-comment-dots"></i></span><span>Request Example</span></a></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-js"><span class="identifier">Org.BouncyCastle.Crypto.Digests.SkeinEngine</span> = <span class="keyword">function</span>();

<span class="identifier">Type</span>.createClass(
	'Org.BouncyCastle.Crypto.Digests.SkeinEngine',
	null,
	<a href="T_Org_BouncyCastle_Utilities_IMemoable.htm">Org.BouncyCastle.Utilities.IMemoable</a>);</code></pre></div></div><dl class="inheritanceHierarchy"><dt>Inheritance</dt><dd><a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>  <span class="icon is-small"><i class="fa fa-arrow-right"></i></span>  <span class="selflink">SkeinEngine</span></dd></dl><dl class="implementsList"><dt>Implements</dt><dd><a href="T_Org_BouncyCastle_Utilities_IMemoable.htm">IMemoable</a></dd></dl></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Remarks</h2><div id="IDBCSection">
            This is the 1.3 version of Skein defined in the Skein hash function submission to the NIST SHA-3
            competition in October 2010.
            <p />
            Skein was designed by Niels Ferguson - Stefan Lucks - Bruce Schneier - Doug Whiting - Mihir
            Bellare - Tadayoshi Kohno - Jon Callas - Jesse Walker.
            <p />
            This implementation is the basis for <a href="T_Org_BouncyCastle_Crypto_Digests_SkeinDigest.htm">SkeinDigest</a> and <a href="T_Org_BouncyCastle_Crypto_Macs_SkeinMac.htm">SkeinMac</a>, implementing the
            parameter based configuration system that allows Skein to be adapted to multiple applications. <br />
            Initialising the engine with <a href="T_Org_BouncyCastle_Crypto_Parameters_SkeinParameters.htm">SkeinParameters</a> allows standard and arbitrary parameters to
            be applied during the Skein hash function.
            <p />
            Implemented:
            <ul><li>256, 512 and 1024 bit internal states.</li><li>Full 96 bit input length.</li><li>Parameters defined in the Skein specification, and arbitrary other pre and post message
            parameters.</li><li>Arbitrary output size in 1 byte intervals.</li></ul><p />
            Not implemented:
            <ul><li>Sub-byte length input (bit padding).</li><li>Tree hashing.</li></ul></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Constructors</h2><div id="IDADGASection"><table id="ConstructorList" class="table is-hoverable"><tr><td><a href="M_Org_BouncyCastle_Crypto_Digests_SkeinEngine__ctor.htm">SkeinEngine(SkeinEngine)</a></td><td>
            Creates a SkeinEngine as an exact copy of an existing instance.
            </td></tr><tr><td><a href="M_Org_BouncyCastle_Crypto_Digests_SkeinEngine__ctor_1.htm">SkeinEngine(Int32, Int32)</a></td><td>
            Constructs a Skein digest with an internal state size and output size.
            </td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Properties</h2><div id="IDQGASection"><table id="PropertyList" class="table is-hoverable"><tr><td><a href="P_Org_BouncyCastle_Crypto_Digests_SkeinEngine_BlockSize.htm">BlockSize</a></td><td> </td></tr><tr><td><a href="P_Org_BouncyCastle_Crypto_Digests_SkeinEngine_OutputSize.htm">OutputSize</a></td><td> </td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Methods</h2><div id="IDFGASection"><table id="MethodList" class="table is-hoverable"><tr><td><a href="M_Org_BouncyCastle_Crypto_Digests_SkeinEngine_BlockUpdate_1.htm">BlockUpdate(ReadOnlySpan<span id="LST43882D56_0" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Byte<span id="LST43882D56_1" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td> </td></tr><tr><td><a href="M_Org_BouncyCastle_Crypto_Digests_SkeinEngine_BlockUpdate.htm">BlockUpdate(<span id="LST43882D56_2" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST43882D56_3" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32, Int32)</a></td><td> </td></tr><tr><td><a href="M_Org_BouncyCastle_Crypto_Digests_SkeinEngine_Copy.htm">Copy</a></td><td> </td></tr><tr><td><a href="M_Org_BouncyCastle_Crypto_Digests_SkeinEngine_DoFinal_1.htm">DoFinal(Span<span id="LST43882D56_4" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Byte<span id="LST43882D56_5" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td> </td></tr><tr><td><a href="M_Org_BouncyCastle_Crypto_Digests_SkeinEngine_DoFinal.htm">DoFinal(<span id="LST43882D56_6" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST43882D56_7" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32)</a></td><td> </td></tr><tr><td><a href="https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)" target="_blank" rel="noopener noreferrer">Equals</a></td><td>Determines whether the specified object is equal to the current object.<br />(Inherited from <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>)</td></tr><tr><td><a href="https://learn.microsoft.com/dotnet/api/system.object.finalize#system-object-finalize" target="_blank" rel="noopener noreferrer">Finalize</a></td><td>Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.<br />(Inherited from <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>)</td></tr><tr><td><a href="https://learn.microsoft.com/dotnet/api/system.object.gethashcode#system-object-gethashcode" target="_blank" rel="noopener noreferrer">GetHashCode</a></td><td>Serves as the default hash function.<br />(Inherited from <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>)</td></tr><tr><td><a href="https://learn.microsoft.com/dotnet/api/system.object.gettype#system-object-gettype" target="_blank" rel="noopener noreferrer">GetType</a></td><td>Gets the <a href="https://learn.microsoft.com/dotnet/api/system.type" target="_blank" rel="noopener noreferrer">Type</a> of the current instance.<br />(Inherited from <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>)</td></tr><tr><td><a href="M_Org_BouncyCastle_Crypto_Digests_SkeinEngine_Init.htm">Init</a></td><td>
            Initialises the Skein engine with the provided parameters. See <a href="T_Org_BouncyCastle_Crypto_Parameters_SkeinParameters.htm">SkeinParameters</a> for
            details on the parameterisation of the Skein hash function.
            </td></tr><tr><td><a href="https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone#system-object-memberwiseclone" target="_blank" rel="noopener noreferrer">MemberwiseClone</a></td><td>Creates a shallow copy of the current <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>.<br />(Inherited from <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>)</td></tr><tr><td><a href="M_Org_BouncyCastle_Crypto_Digests_SkeinEngine_Reset.htm">Reset<span id="LST43882D56_8" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a></td><td>
            Reset the engine to the initial state (with the key and any pre-message parameters , ready to
            accept message input.
            </td></tr><tr><td><a href="M_Org_BouncyCastle_Crypto_Digests_SkeinEngine_Reset_1.htm">Reset(IMemoable)</a></td><td> </td></tr><tr><td><a href="https://learn.microsoft.com/dotnet/api/system.object.tostring#system-object-tostring" target="_blank" rel="noopener noreferrer">ToString</a></td><td>Returns a string that represents the current object.<br />(Inherited from <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>)</td></tr><tr><td><a href="M_Org_BouncyCastle_Crypto_Digests_SkeinEngine_Update.htm">Update</a></td><td> </td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Fields</h2><div id="IDAGASection"><table id="FieldList" class="table is-hoverable"><tr><td><a href="F_Org_BouncyCastle_Crypto_Digests_SkeinEngine_SKEIN_1024.htm">SKEIN_1024</a></td><td>
            1024 bit block size - Skein-1024
            </td></tr><tr><td><a href="F_Org_BouncyCastle_Crypto_Digests_SkeinEngine_SKEIN_256.htm">SKEIN_256</a></td><td>
            256 bit block size - Skein-256
            </td></tr><tr><td><a href="F_Org_BouncyCastle_Crypto_Digests_SkeinEngine_SKEIN_512.htm">SKEIN_512</a></td><td>
            512 bit block size - Skein-512
            </td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>See Also</h2><div id="seeAlsoSection"><h4>Reference</h4><div><a href="N_Org_BouncyCastle_Crypto_Digests.htm">Org.BouncyCastle.Crypto.Digests Namespace</a></div><div><a href="T_Org_BouncyCastle_Crypto_Parameters_SkeinParameters.htm">SkeinParameters</a></div></div></div><div id="InThisArticleColumn" class="column is-hidden-mobile"><nav class="menu sticky is-hidden"><p class="menu-label"><strong>In This Article</strong></p><ul id="InThisArticleMenu" class="menu-list"><li><a class="quickLink">Definition</a></li><li><a class="quickLink">Remarks</a></li><li><a class="quickLink">Constructors</a></li><li><a class="quickLink">Properties</a></li><li><a class="quickLink">Methods</a></li><li><a class="quickLink">Fields</a></li><li><a class="quickLink">See Also</a></li></ul></nav></div></div></div><footer id="PageFooter" class="footer border-top py-3 fixedFooter"><div class="columns"><div class="column"><span class="site-footer-credits">
<a href="https://gridprotectionalliance.github.io/bc-csharp/" target="_self">Documentation Home</a> <br /><br />
Generated by <a href="https://github.com/EWSoftware/SHFB" target="_blank">Sandcastle Help File Builder</a>
</span><p><a href="https://github.com/bcgit/bc-csharp/blob/master/LICENSE.md" target="_blank" rel="noopener noreferrer">Copyright © 2000-2023 The Legion of the Bouncy Castle Inc.</a></p><div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:feedback-crypto%40bouncycastle.org?Subject=Bouncy%20Castle%20Library">Feedback</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        </script> 
				</div><div class="column"> 
				</div></div></footer></div><script>$(function(){
SetDefaultLanguage("cs");
LoadTocFile(null, null);
InitializeQuickLinks();

$(".toggleSection" ).click(function () {
    SectionExpandCollapse(this);
});

$(".toggleSection").keypress(function () {
    SectionExpandCollapseCheckKey(this, event)
});
hljs.highlightAll();
});</script><script>
		$(".requestExampleLink").each(function ()
		{
			if(this.href.substring(0, 4).toLowerCase() === "http")
				this.href += "?title=";
			else
				this.href += "?subject=Bouncy%20Castle%20Library: ";

			this.href += "Add an Example for " + encodeURIComponent(document.title) + "&amp;body=" +
				encodeURIComponent("Please add an example for " + document.title + ".%0D%0DTODO (optional): Describe a specific " +
				"scenario you would like to see addressed.%0D%0DHelp Topic: " + window.location.href).replace(/%250D/g, "%0D");
		});
	</script></body></html>